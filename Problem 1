class Solution:
    #TC:O(n)
    #SC:O(1) we do all comoutation in one and return same
    def productExceptSelf(self, nums: List[int]) -> List[int]:
        '''
        create a array and running product that keeo track of left indices
        change the rp to 1 and keep track of right product and multiply with res
        '''
        n=len(nums)
        res=[1]*n

        rp=1
        for i in range(1,n):
            
            rp=rp*nums[i-1]
            res[i]=rp


        rp=1

        for i in range(n-2,-1,-1):
            rp=rp*nums[i+1]
            res[i]=rp* res[i]
        


        return res
